dplyr::rename(estimate = odds.ratio, conf.low = lower.CL, conf.high = upper.CL) %>%
dplyr::select(contrast, estimate, SE, conf.low, conf.high, species, source),
acc_pa,
acc_po
))
# ---- 3. Unir todo en tabla final (corregido y funcional) ----
tabla_completa <- bind_rows(
df_contr_pa %>%
dplyr::rename(estimate = odds.ratio, conf.low = lower.CL, conf.high = upper.CL) %>%
dplyr::select(contrast, estimate, SE, conf.low, conf.high, species, source),
df_contr_po %>%
dplyr::rename(estimate = odds.ratio, conf.low = lower.CL, conf.high = upper.CL) %>%
dplyr::select(contrast, estimate, SE, conf.low, conf.high, species, source),
acc_pa,
acc_po
))
# ---- 3. Unir todo en tabla final (corregido y funcional) ----
tabla_completa <- bind_rows(
df_contr_pa %>%
dplyr::rename(estimate = odds.ratio, conf.low = lower.CL, conf.high = upper.CL) %>%
dplyr::select(contrast, estimate, SE, conf.low, conf.high, species, source),
df_contr_po %>%
dplyr::rename(estimate = odds.ratio, conf.low = lower.CL, conf.high = upper.CL) %>%
dplyr::select(contrast, estimate, SE, conf.low, conf.high, species, source),
acc_pa,
acc_po
)
# ---- 1. Preparar contrastes EMMEANS ya generados (en escala odds ratio) ----
df_contr_pa <- as.data.frame(summary(contrastes_interes_pa)) %>%
mutate(
contrast = as.character(contrast),
species = "Patella aspera",
source = "Regulación"
)
df_contr_po <- as.data.frame(summary(contrastes_interes_po)) %>%
mutate(
contrast = as.character(contrast),
species = "Patella ordinaria",
source = "Regulación"
)
# ---- 2. Preparar resultados de accesibilidad ya obtenidos (en odds ratio) ----
acc_pa <- broom::tidy(modelo_acc_pa, exponentiate = TRUE, conf.int = TRUE) %>%
filter(term == "accessibilitySouth") %>%
transmute(
contrast = "South vs North",
estimate = estimate,
SE = std.error,
conf.low = conf.low,
conf.high = conf.high,
species = "Patella aspera",
source = "Accesibilidad"
)
acc_po <- broom::tidy(modelo_acc_po, exponentiate = TRUE, conf.int = TRUE) %>%
filter(term == "accessibilitySouth") %>%
transmute(
contrast = "South vs North",
estimate = estimate,
SE = std.error,
conf.low = conf.low,
conf.high = conf.high,
species = "Patella ordinaria",
source = "Accesibilidad"
)
# ---- 3. Unir todo en tabla final (corregido y funcional) ----
tabla_completa <- bind_rows(
df_contr_pa %>%
dplyr::rename(estimate = odds.ratio, conf.low = lower.CL, conf.high = upper.CL) %>%
dplyr::select(contrast, estimate, SE, conf.low, conf.high, species, source),
df_contr_po %>%
dplyr::rename(estimate = odds.ratio, conf.low = lower.CL, conf.high = upper.CL) %>%
dplyr::select(contrast, estimate, SE, conf.low, conf.high, species, source),
acc_pa,
acc_po
)
# ---- 3. Unir todo en tabla final (corregido y funcional) ----
tabla_completa <- bind_rows(
df_contr_pa %>%
dplyr::rename(estimate = odds.ratio, conf.low = lower.CL, conf.high = upper.CL) %>%
dplyr::select(contrast, estimate, SE, conf.low, conf.high, species, source),
df_contr_po %>%
dplyr::rename(estimate = odds.ratio, conf.low = lower.CL, conf.high = upper.CL) %>%
dplyr::select(contrast, estimate, SE, conf.low, conf.high, species, source),
acc_pa,
acc_po
)
summary(contrastes_interes_pa)
# ---- 3. Unir todo en tabla final (corregido y funcional) ----
tabla_completa <- bind_rows(
df_contr_pa %>%
dplyr::rename(estimate = odds.ratio, conf.low = asymp.LCL, conf.high = asymp.UCL) %>%
dplyr::select(contrast, estimate, SE, conf.low, conf.high, species, source),
df_contr_po %>%
dplyr::rename(estimate = odds.ratio, conf.low = asymp.LCL, conf.high = asymp.UCL) %>%
dplyr::select(contrast, estimate, SE, conf.low, conf.high, species, source),
acc_pa,
acc_po
)
# Generar los data frames incluyendo IC
df_contr_pa <- as.data.frame(summary(contrastes_interes_pa, infer = TRUE)) %>%
mutate(
contrast = as.character(contrast),
species = "Patella aspera",
source = "Regulación"
)
df_contr_po <- as.data.frame(summary(contrastes_interes_po, infer = TRUE)) %>%
mutate(
contrast = as.character(contrast),
species = "Patella ordinaria",
source = "Regulación"
)
tabla_completa <- bind_rows(
df_contr_pa %>%
dplyr::rename(estimate = odds.ratio) %>%
dplyr::select(contrast, estimate, SE, species, source),
df_contr_po %>%
dplyr::rename(estimate = odds.ratio) %>%
dplyr::select(contrast, estimate, SE, species, source),
acc_pa,
acc_po
)
tabla_completa <- bind_rows(
df_contr_pa %>%
dplyr::rename(estimate = odds.ratio) %>%
dplyr::select(contrast, estimate, SE, species, source),
df_contr_po %>%
dplyr::rename(estimate = odds.ratio) %>%
dplyr::select(contrast, estimate, SE, species, source),
acc_pa,
acc_po
)
# ---- 4. Formatear tabla ----
tabla_final <- tabla_completa %>%
mutate(
estimate = round(estimate, 3),
SE = round(SE, 3),
conf.low = round(conf.low, 3),
conf.high = round(conf.high, 3)
)
# ---- 5. Mostrar como flextable ----
flextable(tabla_final) %>%
set_caption("Odds Ratios – Regulación y Accesibilidad por especie") %>%
autofit()
resumen_acc_po <- Mad_2sp_analisis %>%
filter(
species == "Patella ordinaria",
protective_regime == "Full acess",
!is.na(mature_imature),
!is.na(accessibility)
) %>%
mutate(
maduro = mature_imature == "Mature"
) %>%
group_by(accessibility) %>%
summarise(
maduros = sum(maduro),
total = n(),
.groups = "drop"
) %>%
mutate(
accessibility = factor(accessibility, levels = c("North", "South"))
)
modelo_acc_po <- glm(
cbind(maduros, total - maduros) ~ accessibility,
data = resumen_acc_po,
family = binomial()
)
broom::tidy(modelo_acc_po, exponentiate = TRUE, conf.int = TRUE)
resumen_acc_pa <- Mad_2sp_analisis %>%
filter(
species == "Patella aspera",
protective_regime == "Full acess",
!is.na(mature_imature),
!is.na(accessibility)
) %>%
mutate(
maduro = mature_imature == "Mature"
) %>%
group_by(accessibility) %>%
summarise(
maduros = sum(maduro),
total = n(),
.groups = "drop"
) %>%
mutate(
accessibility = factor(accessibility, levels = c("North", "South"))
)
modelo_acc_pa <- glm(
cbind(maduros, total - maduros) ~ accessibility,
data = resumen_acc_pa,
family = binomial()
)
broom::tidy(modelo_acc_pa, exponentiate = TRUE, conf.int = TRUE)
# Modelo sobre datos individuales para Patella aspera
modelo_comparado_pa <- Mad_2sp_analisis %>%
filter(species == "Patella aspera", !is.na(mature_imature)) %>%
mutate(
maduro = mature_imature == "Mature",
grupo = case_when(
protective_regime == "Full acess" & regulation_period == "Before" ~ "FA_Before",
protective_regime == "Full acess" & regulation_period == "After" ~ "FA_After",
protective_regime == "MPA" & regulation_period == "After" ~ "MPA_After"
),
grupo = factor(grupo, levels = c("FA_Before", "FA_After", "MPA_After"))
) %>%
glm(maduro ~ grupo, data = ., family = binomial())
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_pa, exponentiate = TRUE, conf.int = TRUE)
em_pa <- emmeans(modelo_comparado_pa, ~ grupo, type = "response")
contrastes_interes_pa <- contrast(em_pa, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
# Convertir resultados de emmeans a data frame
contrastes_df_pa <- as.data.frame(summary(contrastes_interes_pa))
# Formatear columnas:
# - Redondear todas las columnas numéricas excepto p.value
# - Formatear p.value en notación científica
tabla_formateada_pa <- contrastes_df_pa %>%
mutate(
across(where(is.numeric) & !matches("p.value"), ~ round(., 3)),
p.value = format(p.value, scientific = TRUE, digits = 6)
)
# Mostrar como flextable con título
flextable(tabla_formateada_pa) %>%
set_caption(caption = "Marginal Effects (EMMEANS) - Patella aspera")
modelo_comparado_po <- Mad_2sp_analisis %>%
filter(species == "Patella ordinaria", !is.na(mature_imature)) %>%
mutate(
maduro = mature_imature == "Mature",
grupo = case_when(
protective_regime == "Full acess" & regulation_period == "Before" ~ "FA_Before",
protective_regime == "Full acess" & regulation_period == "After" ~ "FA_After",
protective_regime == "MPA" & regulation_period == "After" ~ "MPA_After"
),
grupo = factor(grupo, levels = c("FA_Before", "FA_After", "MPA_After"))
) %>%
glm(maduro ~ grupo, data = ., family = binomial())
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_po, exponentiate = TRUE, conf.int = TRUE)
em_po <- emmeans(modelo_comparado_po, ~ grupo, type = "response")
contrastes_interes_po <- contrast(em_po, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
em_po <- emmeans(modelo_comparado_pa, ~ grupo, type = "response")
contrastes_interes_po <- contrast(em_pa, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
# Convertir resultados de emmeans a data frame
contrastes_df_po <- as.data.frame(summary(contrastes_interes_po))
# Formatear columnas:
# - Redondear todas las columnas numéricas excepto p.value
# - Formatear p.value en notación científica
tabla_formateada_po <- contrastes_df_po %>%
mutate(
across(where(is.numeric) & !matches("p.value"), ~ round(., 3)),
p.value = format(p.value, scientific = TRUE, digits = 6)
)
# Mostrar como flextable con título
flextable(tabla_formateada_po) %>%
set_caption(caption = "Marginal Effects (EMMEANS) - Patella ordinaria")
# Obtener resultados tidy para ambas especies
po_df <- broom::tidy(modelo_comparado_po, exponentiate = TRUE, conf.int = TRUE) %>%
filter(term != "(Intercept)") %>%
mutate(
term = dplyr::recode(term,
"grupoFA_After" = "Full access (After)",
"grupoMPA_After" = "MPA (After)"),
species = "Patella ordinaria"
)
pa_df <- broom::tidy(modelo_comparado_pa, exponentiate = TRUE, conf.int = TRUE) %>%
filter(term != "(Intercept)") %>%
mutate(
term = dplyr::recode(term,
"grupoFA_After" = "Full access (After)",
"grupoMPA_After" = "MPA (After)"),
species = "Patella aspera"
)
# Combinar en un solo data frame
odds_df <- bind_rows(po_df, pa_df)
# Graficar
ggplot(odds_df, aes(x = term, y = estimate, ymin = conf.low, ymax = conf.high, color = species)) +
geom_pointrange(position = position_dodge(width = 0.5), size = 0.8) +
geom_hline(yintercept = 1, linetype = "dashed", color = "gray40") +
coord_flip() +
labs(
title = "Odds ratios by species and management regime",
x = "", y = "Odds Ratio (95% CI)", color = "Species"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "bottom"
)
resumen_acc_po <- Mad_2sp_analisis %>%
filter(
species == "Patella ordinaria",
protective_regime == "Full acess",
!is.na(mature_imature),
!is.na(accessibility)
) %>%
mutate(
maduro = mature_imature == "Mature"
) %>%
group_by(accessibility) %>%
summarise(
maduros = sum(maduro),
total = n(),
.groups = "drop"
) %>%
mutate(
accessibility = factor(accessibility, levels = c("North", "South"))
)
modelo_acc_po <- glm(
cbind(maduros, total - maduros) ~ accessibility,
data = resumen_acc_po,
family = binomial()
)
broom::tidy(modelo_acc_po, exponentiate = TRUE, conf.int = TRUE)
resumen_acc_pa <- Mad_2sp_analisis %>%
filter(
species == "Patella aspera",
protective_regime == "Full acess",
!is.na(mature_imature),
!is.na(accessibility)
) %>%
mutate(
maduro = mature_imature == "Mature"
) %>%
group_by(accessibility) %>%
summarise(
maduros = sum(maduro),
total = n(),
.groups = "drop"
) %>%
mutate(
accessibility = factor(accessibility, levels = c("North", "South"))
)
modelo_acc_pa <- glm(
cbind(maduros, total - maduros) ~ accessibility,
data = resumen_acc_pa,
family = binomial()
)
broom::tidy(modelo_acc_pa, exponentiate = TRUE, conf.int = TRUE)
# Patella ordinaria
res_po <- broom::tidy(modelo_acc_po, exponentiate = TRUE, conf.int = TRUE) %>%
filter(term != "(Intercept)") %>%
mutate(species = "Patella ordinaria")
# Patella aspera
res_pa <- broom::tidy(modelo_acc_pa, exponentiate = TRUE, conf.int = TRUE) %>%
filter(term != "(Intercept)") %>%
mutate(species = "Patella aspera")
# Unimos ambos modelos
res_combinado <- bind_rows(res_po, res_pa) %>%
dplyr::mutate(term = dplyr::recode(term,
"accessibilitySouth" = "South vs North"
))
# Gráfico
ggplot(res_combinado, aes(x = term, y = estimate, ymin = conf.low, ymax = conf.high, color = species)) +
geom_pointrange(position = position_dodge(width = 0.6), size = 0.9) +
geom_hline(yintercept = 1, linetype = "dashed", color = "gray50") +
coord_flip() +
labs(
title = "Odds Ratios – Efecto de accesibilidad (Full access)",
x = "", y = "Odds Ratio (IC 95%)", color = "Especie"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "bottom"
)
# ---- 1. Preparar contrastes EMMEANS ya generados (en escala odds ratio) ----
df_contr_pa <- as.data.frame(summary(contrastes_interes_pa)) %>%
mutate(
contrast = as.character(contrast),
species = "Patella aspera",
source = "Regulación"
)
df_contr_po <- as.data.frame(summary(contrastes_interes_po)) %>%
mutate(
contrast = as.character(contrast),
species = "Patella ordinaria",
source = "Regulación"
)
# ---- 2. Preparar resultados de accesibilidad ya obtenidos (en odds ratio) ----
acc_pa <- broom::tidy(modelo_acc_pa, exponentiate = TRUE, conf.int = TRUE) %>%
filter(term == "accessibilitySouth") %>%
transmute(
contrast = "South vs North",
estimate = estimate,
SE = std.error,
conf.low = conf.low,
conf.high = conf.high,
species = "Patella aspera",
source = "Accesibilidad"
)
acc_po <- broom::tidy(modelo_acc_po, exponentiate = TRUE, conf.int = TRUE) %>%
filter(term == "accessibilitySouth") %>%
transmute(
contrast = "South vs North",
estimate = estimate,
SE = std.error,
conf.low = conf.low,
conf.high = conf.high,
species = "Patella ordinaria",
source = "Accesibilidad"
)
tabla_completa <- bind_rows(
df_contr_pa %>%
dplyr::rename(estimate = odds.ratio) %>%
dplyr::select(contrast, estimate, SE, species, source),
df_contr_po %>%
dplyr::rename(estimate = odds.ratio) %>%
dplyr::select(contrast, estimate, SE, species, source),
acc_pa,
acc_po
)
# ---- 4. Formatear tabla ----
tabla_final <- tabla_completa %>%
mutate(
estimate = round(estimate, 3),
SE = round(SE, 3),
conf.low = round(conf.low, 3),
conf.high = round(conf.high, 3)
)
# ---- 5. Mostrar como flextable ----
flextable(tabla_final) %>%
set_caption("Odds Ratios – Regulación y Accesibilidad por especie") %>%
autofit()
modelo_comparado_po <- Mad_2sp_analisis %>%
filter(species == "Patella ordinaria", !is.na(mature_imature)) %>%
mutate(
maduro = mature_imature == "Mature",
grupo = case_when(
protective_regime == "Full acess" & regulation_period == "Before" ~ "FA_Before",
protective_regime == "Full acess" & regulation_period == "After" ~ "FA_After",
protective_regime == "MPA" & regulation_period == "After" ~ "MPA_After"
),
grupo = factor(grupo, levels = c("FA_Before", "FA_After", "MPA_After"))
) %>%
glm(maduro ~ grupo, data = ., family = binomial())
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_po, exponentiate = TRUE, conf.int = TRUE)
em_po <- emmeans(modelo_comparado_po, ~ grupo, type = "response")
contrastes_interes_po <- contrast(em_po, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
em_po <- emmeans(modelo_comparado_po, ~ grupo, type = "response")
contrastes_interes_po <- contrast(em_pa, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
# Convertir resultados de emmeans a data frame
contrastes_df_po <- as.data.frame(summary(contrastes_interes_po))
# Formatear columnas:
# - Redondear todas las columnas numéricas excepto p.value
# - Formatear p.value en notación científica
tabla_formateada_po <- contrastes_df_po %>%
mutate(
across(where(is.numeric) & !matches("p.value"), ~ round(., 3)),
p.value = format(p.value, scientific = TRUE, digits = 6)
)
# Mostrar como flextable con título
flextable(tabla_formateada_po) %>%
set_caption(caption = "Marginal Effects (EMMEANS) - Patella ordinaria")
modelo_comparado_po <- Mad_2sp_analisis %>%
filter(species == "Patella ordinaria", !is.na(mature_imature)) %>%
mutate(
maduro = mature_imature == "Mature",
grupo = case_when(
protective_regime == "Full acess" & regulation_period == "Before" ~ "FA_Before",
protective_regime == "Full acess" & regulation_period == "After" ~ "FA_After",
protective_regime == "MPA" & regulation_period == "After" ~ "MPA_After"
),
grupo = factor(grupo, levels = c("FA_Before", "FA_After", "MPA_After"))
) %>%
glm(maduro ~ grupo, data = ., family = binomial())
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_po, exponentiate = TRUE, conf.int = TRUE)
em_po <- emmeans(modelo_comparado_po, ~ grupo, type = "response")
contrastes_interes_po <- contrast(em_po, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
em_po <- emmeans(modelo_comparado_po, ~ grupo, type = "response")
contrastes_interes_po <- contrast(em_po, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
# Convertir resultados de emmeans a data frame
contrastes_df_po <- as.data.frame(summary(contrastes_interes_po))
# Formatear columnas:
# - Redondear todas las columnas numéricas excepto p.value
# - Formatear p.value en notación científica
tabla_formateada_po <- contrastes_df_po %>%
mutate(
across(where(is.numeric) & !matches("p.value"), ~ round(., 3)),
p.value = format(p.value, scientific = TRUE, digits = 6)
)
# Mostrar como flextable con título
flextable(tabla_formateada_po) %>%
set_caption(caption = "Marginal Effects (EMMEANS) - Patella ordinaria")
install.packages("latexpdf")
