panel.grid.major = element_line(color = "darkgrey", size = 0.2),
axis.title = element_blank(),
plot.margin = margin(5, 5, 5, 5)
)
map_madeira <- ggplot() +
geom_sf(data = madeira_sf, fill = "gray90", color = "darkgrey") +
geom_sf(data = coords_sf, aes(color = sampling_site, shape=protective_regime), size = 3) +
coord_sf(xlim = c(-17.6, -16.2), ylim = c(32.4, 33.2), expand = FALSE) +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "tl", which_north = "true",
style = north_arrow_fancy_orienteering()) +
labs(color = "Sitios de muestreo") +
theme_minimal() +
theme(legend.position = "bottom")
legend_b <- ggplotGrob(map_madeira) %>%
gtable::gtable_filter("guide-box")
map_madeira_noleg <- map_madeira + theme(legend.position = "none")
panel_maps <- plot_grid(
map_region, map_madeira_noleg,
labels = c("A)", "B)"),
label_size = 14,
ncol = 2,
rel_widths = c(1, 1.2)
)
final_plot <- plot_grid(
panel_maps,
legend_b,
ncol = 1,
rel_heights = c(1, 0.1)
)
final_plot
madurez_prop_mensual_pr <- Mad_2sp_analisis %>%
filter(!is.na(mature_imature)) %>%
group_by(year, month, species, sampling_site, accessibility, protective_regime) %>%
summarise(
total = n(),
maduros = sum(mature_imature == "Mature"),
proporcion_madura = maduros / total,
.groups = "drop"
) %>%
mutate(
grupo = interaction(species, protective_regime, sep = " - "),
fecha = lubridate::make_date(year, month, 1)  # For a continuous time axis
)
# Visual style for protection regime plot
colores <- c(
"Patella aspera - Full acess" = "#D39C00",
"Patella ordinaria - Full acess" = "#0072B2",
"Patella aspera - MPA" = "#D39C00",
"Patella ordinaria - MPA" = "#0072B2"
)
lineas <- c(
"Patella aspera - Full acess" = "solid",
"Patella ordinaria - Full acess" = "solid",
"Patella aspera - MPA" = "dotted",
"Patella ordinaria - MPA" = "dotted"
)
# Final plot: mature proportion by protection regime
MATURE_PROP_protreg <- ggplot(
data = madurez_prop_mensual_pr,
aes(x = fecha,
y = proporcion_madura,
color = grupo,
linetype = grupo)) +
geom_line(linewidth = 1) +
geom_vline(
xintercept = as.Date("2007-01-01"),
linetype = "dashed",
color = "black",
linewidth = 0.7) +
scale_color_manual(
values = colores) +
scale_linetype_manual(
values = lineas) +
scale_y_continuous(
labels = scales::percent_format(accuracy = 1)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_date(
date_breaks = "2 year",
date_labels = "%Y"
) +
labs(
x = "Date",
y = "Mature Proportion (%)") +
theme_minimal() +
theme(
legend.position = "bottom",
legend.title = element_blank(),
panel.grid.minor = element_blank()
)
# Monthly proportion of mature individuals by accessibility
madurez_prop_mensual_ac <- Mad_2sp_analisis %>%
filter(!is.na(mature_imature)) %>%
group_by(year, month, species, sampling_site, accessibility, protective_regime) %>%
summarise(
total = n(),
maduros = sum(mature_imature == "Mature"),
proporcion_madura = maduros / total,
.groups = "drop"
) %>%
mutate(
grupo = interaction(species, accessibility, sep = " - "),
fecha = lubridate::make_date(year, month, 1)  # For a continuous time axis
)
# Visual style for accessibility plot
colores <- c(
"Patella aspera - North" = "#D39C00",
"Patella ordinaria - North" = "#0072B2",
"Patella aspera - South" = "#D39C00",
"Patella ordinaria - South" = "#0072B2"
)
lineas <- c(
"Patella aspera - South" = "solid",
"Patella ordinaria - South" = "solid",
"Patella aspera - North" = "dotted",
"Patella ordinaria - North" = "dotted"
)
# Final plot: mature proportion by accessibility
MATURE_PROP_ACC <- ggplot(
madurez_prop_mensual_ac,
aes(x = fecha,
y = proporcion_madura,
color = grupo,
linetype = grupo)) +
geom_line(
linewidth = 1) +
geom_vline(
xintercept = as.Date("2007-01-01"),
linetype = "dashed",
color = "black",
linewidth = 0.7) +
scale_color_manual(
values = colores) +
scale_linetype_manual(
values = lineas) +
scale_y_continuous(
labels = scales::percent_format(accuracy = 1)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_date(
date_breaks = "2 year",
date_labels = "%Y"
) +
labs(
x = "Date",
y = "Mature proportion (%)") +
theme_minimal() +
theme(
legend.position = "bottom",
legend.title = element_blank(),
panel.grid.minor = element_blank()
)
# Plot both panels (A and B)
plot_grid(
MATURE_PROP_protreg, MATURE_PROP_ACC,
labels = c("A)", "B)"),
label_size = 16,
label_x = 0.02,   # Horizontal alignment (closer to edge)
label_y = 0.3,    # Vertical alignment
hjust = 0,        # Left justified
vjust = 1,        # Top justified
ncol = 1,
rel_heights = c(1, 1)
)
madurez_prop <- Mad_2sp_analisis %>%
filter(!is.na(mature_imature)) %>%
group_by(year, month, species, protective_regime, regulation_period) %>%
summarise(
total = n(),
maduros = sum(mature_imature == "Mature"),
prop_maduros = maduros / total,
.groups = "drop"
) %>%
mutate(fecha = make_date(year, month, 1))
ggplot(madurez_prop,
aes(x = fecha, y = prop_maduros,
color = interaction(protective_regime, regulation_period), linetype = species)) +
geom_line(linewidth = 1) +
geom_vline(xintercept = as.Date("2007-01-01"),
linetype = "dashed", color = "black") +
labs(
title = "Monthly evolution of the proportion of mature individuals",
x = "Year",
y = "Mature proportion (%)",
color = "Protection × Period",
linetype = "Species"
) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_date(
date_breaks = "2 year",
date_labels = "%Y"
)+
theme_minimal(base_size = 12) +
theme(
legend.position = "bottom",
strip.text = element_text(face = "bold"),
plot.title = element_text(face = "bold", hjust = 0.5)
)
madurez_yearly <- madurez_prop %>%
group_by(year, species, protective_regime, regulation_period) %>%
summarise(prop_m = mean(prop_maduros, na.rm = TRUE), .groups = "drop")
ggplot(madurez_yearly, aes(x = regulation_period, y = prop_m, fill = protective_regime)) +
geom_boxplot() +
facet_wrap(~species) +
labs(title = "Mature adult proportion befor and after 2007", y = "Mature Proportion (%)", x = "Regulation") +
theme_minimal()
madurez_mes <- madurez_prop %>%
group_by(month, species, protective_regime) %>%
summarise(prop_m = mean(prop_maduros, na.rm = TRUE), .groups = "drop")
periodos <- tibble(
month = 1:12,
periodo = case_when(
month %in% 4:9 ~ "Exploitation",
TRUE ~ "Reproductive"
)
)
madurez_mes_plot <- madurez_mes %>%
left_join(periodos, by = "month")
ggplot(madurez_mes_plot, aes(x = month, y = prop_m,
color = protective_regime,
linetype = species)) +
# Fondo por periodo con baja opacidad
geom_tile(aes(x = month, fill = periodo, y = 0.5), height = 1, alpha = 0.1,
inherit.aes = FALSE, show.legend = FALSE) +
# Línea y puntos
geom_line(linewidth = 1) +
geom_point(size = 1.5) +
# Escalas
scale_x_continuous(breaks = 1:12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = c("Exploitation" = "mistyrose",
"Reproductive" = "palegreen")) +
# Etiquetas
labs(title = "Seasonality of maturity and exploitation vs reproductive period",
x = "Month", y = "Mature proportion") +
# Tema limpio
theme_minimal() +
theme(
legend.title = element_blank(),
legend.box = "horizontal",
legend.position = "bottom",
plot.title = element_text(face = "bold", hjust = 0.5)
)
# Modelo sobre datos individuales para Patella aspera
modelo_comparado_pa <- Mad_2sp_analisis %>%
filter(species == "Patella aspera", !is.na(mature_imature)) %>%
mutate(
maduro = mature_imature == "Mature",
grupo = case_when(
protective_regime == "Full acess" & regulation_period == "Before" ~ "FA_Before",
protective_regime == "Full acess" & regulation_period == "After"  ~ "FA_After",
protective_regime == "MPA"        & regulation_period == "After"  ~ "MPA_After"
),
grupo = factor(grupo, levels = c("FA_Before", "FA_After", "MPA_After"))
) %>%
glm(maduro ~ grupo, data = ., family = binomial())
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_pa, exponentiate = TRUE, conf.int = TRUE)
# Modelo sobre datos individuales para Patella aspera
modelo_comparado_pa <- Mad_2sp_analisis %>%
filter(species == "Patella aspera", !is.na(mature_imature)) %>%
mutate(
maduro = mature_imature == "Mature",
grupo = case_when(
protective_regime == "Full acess" & regulation_period == "Before" ~ "FA_Before",
protective_regime == "Full acess" & regulation_period == "After"  ~ "FA_After",
protective_regime == "MPA"        & regulation_period == "After"  ~ "MPA_After"
),
grupo = factor(grupo, levels = c("FA_Before", "FA_After", "MPA_After"))
) %>%
glm(maduro ~ grupo, data = ., family = binomial())
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_pa, exponentiate = TRUE, conf.int = TRUE)
modelo_opt_aspera <- stepAIC(modelo_comparado_pa, direction = "both", trace = FALSE)
modelo_opt_aspera
# Modelo sobre datos individuales para Patella aspera
modelo_comparado_pa <- Mad_2sp_analisis %>%
filter(species == "Patella aspera", !is.na(mature_imature)) %>%
mutate(
maduro = mature_imature == "Mature",
grupo = case_when(
protective_regime == "Full acess" & regulation_period == "Before" ~ "FA_Before",
protective_regime == "Full acess" & regulation_period == "After"  ~ "FA_After",
protective_regime == "MPA"        & regulation_period == "After"  ~ "MPA_After"
),
grupo = factor(grupo, levels = c("FA_Before", "FA_After", "MPA_After"))
) %>%
glm(maduro ~ grupo, data = ., family = binomial())
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_pa, exponentiate = TRUE, conf.int = TRUE)
em_pa <- emmeans(modelo_comparado_pa, ~ grupo, type = "response")
contrastes_interes <- contrast(em_pa, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
# Mostrar resultados
summary(contrastes_interes)
# Modelo sobre datos individuales para Patella ordinaria
modelo_comparado_po <- Mad_2sp_analisis %>%
filter(species == "Patella ordinaria", !is.na(mature_imature)) %>%
mutate(
maduro = mature_imature == "Mature",
grupo = case_when(
protective_regime == "Full acess" & regulation_period == "Before" ~ "FA_Before",
protective_regime == "Full acess" & regulation_period == "After"  ~ "FA_After",
protective_regime == "MPA"        & regulation_period == "After"  ~ "MPA_After"
),
grupo = factor(grupo, levels = c("FA_Before", "FA_After", "MPA_After"))
) %>%
glm(maduro ~ grupo, data = ., family = binomial())
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_po, exponentiate = TRUE, conf.int = TRUE)
em_pa <- emmeans(modelo_comparado_pa, ~ grupo, type = "response")
contrastes_interes <- contrast(em_pa, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
# Mostrar resultados
summary(contrastes_interes)
# Modelo sobre datos individuales para Patella aspera
modelo_comparado_pa <- Mad_2sp_analisis %>%
filter(species == "Patella aspera", !is.na(mature_imature)) %>%
mutate(
maduro = mature_imature == "Mature",
grupo = case_when(
protective_regime == "Full acess" & regulation_period == "Before" ~ "FA_Before",
protective_regime == "Full acess" & regulation_period == "After"  ~ "FA_After",
protective_regime == "MPA"        & regulation_period == "After"  ~ "MPA_After"
),
grupo = factor(grupo, levels = c("FA_Before", "FA_After", "MPA_After"))
) %>%
glm(maduro ~ grupo, data = ., family = binomial())
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_pa, exponentiate = TRUE, conf.int = TRUE)
em_pa <- emmeans(modelo_comparado_pa, ~ grupo, type = "response")
contrastes_interes_pa <- contrast(em_pa, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
# Mostrar resultados
summary(contrastes_interes)
# Modelo sobre datos individuales para Patella ordinaria
modelo_comparado_po <- Mad_2sp_analisis %>%
filter(species == "Patella ordinaria", !is.na(mature_imature)) %>%
mutate(
maduro = mature_imature == "Mature",
grupo = case_when(
protective_regime == "Full acess" & regulation_period == "Before" ~ "FA_Before",
protective_regime == "Full acess" & regulation_period == "After"  ~ "FA_After",
protective_regime == "MPA"        & regulation_period == "After"  ~ "MPA_After"
),
grupo = factor(grupo, levels = c("FA_Before", "FA_After", "MPA_After"))
) %>%
glm(maduro ~ grupo, data = ., family = binomial())
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_po, exponentiate = TRUE, conf.int = TRUE)
em_po <- emmeans(modelo_comparado_po, ~ grupo, type = "response")
contrastes_interes_po <- contrast(em_po, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
# Mostrar resultados
summary(contrastes_interes)
flextable(contrastes_interes_po %>% mutate(across(where(is.numeric), round, 3))) %>%
set_caption("Marginal Effects (EMMEANS) - Patella aspera") %>% autofit()
flextable(contrastes_interes_po %>% mutate(across(where(is.numeric), round, 3))) %>%
set_caption("Marginal Effects (EMMEANS) - Patella aspera") %>% autofit()
# EMMEANS para Patella aspera
em_pa <- emmeans(modelo_comparado_pa, ~ grupo, type = "response")
contr_pa <- contrast(em_pa, method = list(
"FA_Before vs FA_After"   = c(1, -1, 0),
"FA_Before vs MPA_After"  = c(1, 0, -1),
"FA_After vs MPA_After"   = c(0, 1, -1)
), type = "response")
df_pa <- as.data.frame(summary(contr_pa)) %>%
mutate(species = "Patella aspera")
# EMMEANS para Patella ordinaria
em_po <- emmeans(modelo_comparado_po, ~ grupo, type = "response")
contr_po <- contrast(em_po, method = list(
"FA_Before vs FA_After"   = c(1, -1, 0),
"FA_Before vs MPA_After"  = c(1, 0, -1),
"FA_After vs MPA_After"   = c(0, 1, -1)
), type = "response")
df_po <- as.data.frame(summary(contr_po)) %>%
mutate(species = "Patella ordinaria")
# Unir resultados
df_contr <- bind_rows(df_pa, df_po) %>%
rename(contrast = contrast, estimate = odds.ratio, conf.low = asymp.LCL, conf.high = asymp.UCL)
# Unir resultados
df_contr <- bind_rows(df_pa, df_po) %>%
rename(contrast = contrast, estimate = odds.ratio, conf.low = asymp.LCL, conf.high = asymp.UCL)
# Unir resultados
df_contr <- bind_rows(
as.data.frame(summary(contr_pa)) %>% mutate(species = "Patella aspera"),
as.data.frame(summary(contr_po)) %>% mutate(species = "Patella ordinaria")
) %>%
rename(
contrast = contrast,
estimate = odds.ratio,
conf.low = lower.CL,
conf.high = upper.CL
)
# Modelo sobre datos individuales para Patella ordinaria
modelo_comparado_po <- Mad_2sp_analisis %>%
filter(species == "Patella ordinaria", !is.na(mature_imature)) %>%
mutate(
maduro = mature_imature == "Mature",
grupo = case_when(
protective_regime == "Full acess" & regulation_period == "Before" ~ "FA_Before",
protective_regime == "Full acess" & regulation_period == "After"  ~ "FA_After",
protective_regime == "MPA"        & regulation_period == "After"  ~ "MPA_After"
),
grupo = factor(grupo, levels = c("FA_Before", "FA_After", "MPA_After"))
) %>%
glm(maduro ~ grupo, data = ., family = binomial())
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_po, exponentiate = TRUE, conf.int = TRUE)
# Resultados del modelo (odds ratios con IC 95%)
broom::tidy(modelo_comparado_po, exponentiate = TRUE, conf.int = TRUE)
contrastes_interes_po <- contrast(em_po, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
em_po <- emmeans(modelo_comparado_po, ~ grupo, type = "response")
contrastes_interes_po <- contrast(em_po, method = list(
"FA_Before vs FA_After" = c(1, -1, 0),
"FA_Before vs MPA_After" = c(1, 0, -1),
"FA_After vs MPA_After" = c(0, 1, -1)
), type = "response")
# Mostrar resultados
summary(contrastes_interes_po)
flextable(contrastes_interes_po %>% mutate(across(where(is.numeric), round, 3))) %>%
set_caption("Marginal Effects (EMMEANS) - Patella aspera")
library(flextable)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Data manipulation
library(tidyverse)   # Includes dplyr, ggplot2, tibble, readr, etc.
library(lubridate)   # Date and time parsing
library(janitor)     # Data cleaning
library(readxl)      # Excel file import
library(stringr)     # String manipulation
library(tidyr)       # Data reshaping
# Visualization
library(ggplot2)     # Base plotting
library(scales)      # Axis formatting
library(cowplot)     # Plot composition
library(ggthemes)    # Custom themes
library(hrbrthemes)  # Additional themes
library(viridis)     # Color palettes
library(ggridges)    # Ridgeline plots
library(ggrepel)     # Smart text labels
library(gridExtra)   # Grid layouts
library(grid)        # Base grid system
library(ggpubr)      # Publication-ready plots
# Spatial data / maps
library(sf)              # Simple Features for spatial data
library(ggspatial)       # Scale bars and north arrows
library(ggmap)           # Map backgrounds
library(geodata)         # GADM shapefiles
library(rnaturalearth)   # Country outlines
library(rnaturalearthdata)
# Statistical modeling
library(broom)       # Tidy model output
library(emmeans)     # Estimated marginal means
library(car)         # ANOVA, VIF
library(multcomp)    # Multiple comparisons
library(lmtest)      # Model testing
library(MASS)        # Classic datasets and models
library(moderndive)  # Teaching statistics with tidy tools
# Statistical tests & summaries
library(moments)     # Skewness, kurtosis
library(DescTools)   # Descriptive statistics
library(descr)       # Frequency tables
library(effsize)     # Effect sizes
library(vcd)         # Visualizing categorical data
library(conover.test)# Conover test (non-parametric)
library(pROC)        # ROC curves
library(flextable)
Mad_RAW <- readxl::read_excel("E:/Investigación/Repositorios/Lapacom/Data/ToAnalyze/Madeira/BD_LIMPETS_MAD_1996-2018.xlsx", sheet = "Data", range = "A1:T69707")
Mad_RAW_Clean <- Mad_RAW %>% clean_names()
Mad_selected <- Mad_RAW_Clean %>%
dplyr::select(species, year, month, total_length_mm, total_length_class_mm, weight_g, mature_imature,
sampling_site, lat, long, protective_regime, proximity_human_settlements,
accessibility, age_lt, age_months, age_class)
Mad_2sp <- Mad_selected %>%
filter(species %in% c("Patella ordinaria", "Patella aspera")) %>%
filter(!is.na(sampling_site) & trimws(sampling_site) != "") %>%
mutate(across(where(is.character), as.factor),
regulation_period = if_else(year < 2007, "Before", "After") %>% as.factor())
Mad_2sp_analisis <- Mad_2sp %>%
filter(sampling_site %in% c("Porto Moniz", "Paúl do Mar", "Funchal", "Desertas",
"Caniçal", "Santa Cruz", "Ribeira Brava", "São Vicente")) %>%
mutate(
across(where(is.character), as.factor),
regulation_period = factor(regulation_period, levels = c("Before", "After"))
)
Mad_2sp_analisis <- Mad_2sp_analisis %>%
mutate(
accessibility = case_when(
protective_regime == "MPA" ~ "South",              # asignar categoría South a todas las MPA
TRUE ~ as.character(accessibility)                 # mantener el resto tal como está
)
) %>%
filter(!is.na(accessibility), accessibility %in% c("North", "South")) %>%  # eliminar NA y "North-South"
mutate(
accessibility = factor(accessibility, levels = c("North", "South"))      # asegurar orden y formato
)
summary(Mad_2sp_analisis)
